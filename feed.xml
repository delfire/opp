<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Object Pascal Programming</title>
    <description>Sacadas sobre Programa√ß√£o Orientada a Objetos e Object Pascal.
</description>
    <link>http://objectpascalprogramming.com/</link>
    <atom:link href="http://objectpascalprogramming.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Voc√™ sabe, com certeza, o que √© Orienta√ß√£o a Objetos?</title>
        <description>&lt;h2 id=&quot;um-pouco-de-histria&quot;&gt;Um pouco de Hist√≥ria&lt;/h2&gt;

&lt;p&gt;Muitos programadores, ao menos uma vez na vida, j√° devem ter pesquisado 
o que significa &lt;strong&gt;Orienta√ß√£o a Objetos&lt;/strong&gt;, quando o termo foi cunhado e por quem.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;H√° v√°rios sites hoje em dia contendo essas informa√ß√µes, ent√£o n√£o vou 
replic√°-las aqui‚Ä¶ bem, s√≥ pra lembrar rapidamente: o criador do termo foi Alan Kay, 
o mesmo criador da linguagem Smalltalk ‚Äî uma linguagem puramente 
Orientada a Objetos ‚Äî no entanto, mesmo antes do termo ter sido criado, 
ideias conceituais sobre Orienta√ß√£o a Objetos j√° estavam sendo aplicadas 
na linguagem Simula 67 (1967).&lt;/p&gt;

&lt;p&gt;Linguagens de programa√ß√£o foram desenhadas com base nesse paradigma; centenas ou milhares de livros foram escritos; milh√µes de sites na Internet falam desse assunto. Ent√£o porque, ap√≥s todos esses anos, a maioria dos programadores ainda n√£o sabem o que √© programar Orientado a Objetos?&lt;/p&gt;

&lt;h2 id=&quot;um-objeto-no--um-balde-de-funes-e-dados&quot;&gt;Um Objeto n√£o √© um ‚Äúbalde‚Äù de Fun√ß√µes e Dados&lt;/h2&gt;

&lt;p&gt;Ok, &lt;ins&gt;tecnicamente&lt;/ins&gt; ele √© um ‚Äúbalde‚Äù de fun√ß√µes e dados.
Quando um objeto √© criado ele possui uma estrutura de dados em mem√≥ria; cada fun√ß√£o recebe um ponteiro impl√≠cito para essa estrutura; as fun√ß√µes podem utilizar esses dados como se fossem vari√°veis locais‚Ä¶ basicamente √© isso.&lt;/p&gt;

&lt;p&gt;Mas se voc√™ n√£o for um projetista de compiladores, pouco importa saber como um Objeto √© gerenciado internamente pelo compilador ‚Äî muitos programadores Java nem sabem o que √© um ponteiro :)&lt;/p&gt;

&lt;p&gt;Ent√£o fun√ß√µes e dados ganharam novos nomes: fun√ß√µes s√£o chamadas de M√©todos e dados s√£o chamados de Atributos ou Propriedades.&lt;/p&gt;

&lt;p&gt;Utilizar as palavras M√©todos e Atributos j√° √© um grande passo para entender o que s√£o Objetos, mas eu prefiro dizer que um Objeto tem &lt;strong&gt;Comportamento&lt;/strong&gt; e &lt;strong&gt;Estado&lt;/strong&gt;, respectivamente.&lt;/p&gt;

&lt;p&gt;E qual a diferen√ßa (te√≥rica) entre &lt;ins&gt;M√©todos vs Comportamentos&lt;/ins&gt; e &lt;ins&gt;Atributos vs Estado&lt;/ins&gt;?
Se voc√™ ‚Äúexecuta sequencialmente os m√©todos‚Äù de um Objeto e/ou ‚Äúatualiza seus atributos‚Äù, voc√™ utiliza &lt;strong&gt;Programa√ß√£o Procedural&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;√â assunto para outro post explicar as diferen√ßas sutis de nomenclatura, assim como as afirma√ß√µes que fiz acima, mas se for poss√≠vel para voc√™ apenas aceitar tais defini√ß√µes por enquanto, continue lendo.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;
    ‚ÄúA orienta√ß√£o a objetos √© um modelo de an√°lise,
    projeto e programa√ß√£o de sistemas de software baseado
    na composi√ß√£o e intera√ß√£o entre diversas unidades de
    software chamadas de objetos.‚Äù 
  &lt;/p&gt;
  &lt;footer&gt;&lt;cite title=&quot;Wikipedia&quot;&gt;‚Äî Wikipedia&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;p&gt;Objetos podem ser &lt;strong&gt;compostos&lt;/strong&gt; por outros Objetos e eles &lt;strong&gt;interagem&lt;/strong&gt; entre si.&lt;/p&gt;

&lt;p&gt;Fun√ß√µes s√£o executadas. Objetos interagem entre si.&lt;/p&gt;

&lt;p&gt;Nunca pensem em Objetos em termos de fun√ß√µes e dados. Nunca.&lt;/p&gt;

&lt;p&gt;Para n√≥s, de agora em diante, um Objeto representa uma entidade, 
criatura ou qualquer coisa fora do contexto do programa.&lt;/p&gt;

&lt;p&gt;Alguns dizem, tamb√©m, que um Objeto representa uma entidade na ‚Äúvida real‚Äù. 
A defini√ß√£o est√° correta, por√©m pode gerar confus√£o, por exemplo:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Um cachorro √© uma entidade na vida real? Sim.&lt;/li&gt;
  &lt;li&gt;Uma pessoa √© uma entidade na vida real? Sim.&lt;/li&gt;
  &lt;li&gt;Um arquivo de computador √© uma entidade na vida real? Sim.&lt;/li&gt;
  &lt;li&gt;Um pixel √© uma entidade na vida real? Sim.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Se voc√™ n√£o notou diferen√ßa entre os exemplos, parab√©ns. Mas se ficou em d√∫vida a 
respeito dos itens #3 e #4, tudo bem, muitos tem a mesma d√∫vida. Por isso eu digo 
que um Objeto √© qualquer coisa fora do contexto do programa. Definir como ‚Äúvida real‚Äù 
tamb√©m est√° certo e tem a vantagem de ser mais r√°pido pra escrever üòâ&lt;/p&gt;

&lt;h2 id=&quot;os-programadores-no-utilizam-orientao-a-objetos&quot;&gt;Os programadores n√£o utilizam Orienta√ß√£o a Objetos&lt;/h2&gt;

&lt;p&gt;Estou afirmando com base na minha experi√™ncia pessoal com o mercado brasileiro, 
livros e in√∫meros post lidos por mim no decorrer dos anos.&lt;/p&gt;

&lt;p&gt;Voc√™ pode entender isso como uma coisa boa ou ruim. Depende do ponto de vista. 
Existe a Programa√ß√£o Funcional e muitas (grandes) empresas a utilizam. 
Programa√ß√£o Funcional n√£o tem nada haver com Orienta√ß√£o a Objetos e, tudo bem.&lt;/p&gt;

&lt;p&gt;Mas, aten√ß√£o. N√£o pense que voc√™ programa Orientado a Objetos s√≥ 
porque utiliza &lt;strong&gt;Classes&lt;/strong&gt;, &lt;strong&gt;Heran√ßa&lt;/strong&gt;, &lt;strong&gt;Encapsulamento&lt;/strong&gt; e, talvez, 
&lt;strong&gt;Polimorfismo&lt;/strong&gt;. Esse √© a base, mas n√£o √© tudo.&lt;/p&gt;

&lt;p&gt;N√£o somos diferentes. Eu pensava que programava Orientado a Objetos por 
usar e aplicar ‚Äî ou achar que estava aplicando ‚Äî esses conceitos b√°sicos da 
Orienta√ß√£o a Objetos que nos ensinaram no meio acad√™mico. Mas n√£o foi o bastante.&lt;/p&gt;

&lt;p&gt;Esqueceram de nos ensinar como &lt;strong&gt;Pensar Orientado a Objetos&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Mas isso √© assunto para um pr√≥ximo post.&lt;/p&gt;

&lt;p&gt;N√£o deixem de se inscrever na &lt;a href=&quot;/lista-vip/&quot;&gt;Lista VIP&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Sun, 27 Dec 2015 15:00:00 +0000</pubDate>
        <link>http://objectpascalprogramming.com/posts/o-que-e-orientacao-a-objetos</link>
        <guid isPermaLink="true">http://objectpascalprogramming.com/posts/o-que-e-orientacao-a-objetos</guid>
      </item>
    
  </channel>
</rss>
